apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "Votinghelm.fullname" . }}-redis-deploy
  labels:
    {{- include "Votinghelm.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "Votinghelm.selectorLabels" . | nindent 6 }}
      name: {{ include "Votinghelm.fullname" . }}-redis-pod
      app: {{ .Values.applicationName }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "Votinghelm.selectorLabels" . | nindent 8 }}
      name: {{ include "Votinghelm.fullname" . }}-redis-pod
      app: {{ .Values.applicationName }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-redis
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.redis.image.repository }}"
          imagePullPolicy: {{ .Values.vote.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.vote.containerPort }}
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: name
                operator: In
                values:
                - redis-pod
            topologyKey: "kubernetes.io/hostname"
