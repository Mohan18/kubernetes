apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "vote-app.name" . }}-postgres-deploy
  labels:
    name: {{ template "vote-app.name" . }}-postgress-deploy
    app: {{ template "vote-app.name" . }}-demo
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      name: {{ template "vote-app.name" . }}-postgress-pod
      app: {{ template "vote-app.name" . }}-demo
  serviceName: {{ template "vote-app.name" . }}-postgress-service
  template:
    metadata:
      name: {{ template "vote-app.name" . }}-postgres-pod
      labels:
        name: {{ template "vote-app.name" . }}-postgress-pod
        app: {{ template "vote-app.name" . }}-demo
    spec:
      containers:
        - name: postgres
          image: "{{ .Values.postgres.image.repository }}:{{ .Values.postgres.image.tag }}"
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              value: "{{ .Values.postgres.postgresql.postgresUser }}"
            - name: POSTGRES_PASSWORD
              value: "{{ .Values.postgres.postgresql.postgresPassword }}"
          volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: postgredb
            subPath: postgres
  volumeClaimTemplates:
  - metadata:
      name: postgredb
    spec:
      storageClassName: manual
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 10Gi
